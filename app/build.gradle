import java.text.SimpleDateFormat

apply plugin: 'com.android.application'

/**
 * Put release keystore as `release-key.jks` and the signing information
 * as `release-key.properties` on project directory
 * (both files already listed on project .gitignore).
 *
 * The `release-key.properties` contains:
 *
 *      storePassword=****
 *      keyAlias=alias_name
 *      keyPassword=****
 *
 *  Then build release apk with
 *
 *      gradle clean assembleRelease
 *
 *  The signed apk should be in the `app/build/outputs/apk` directory.
 *
 *  Both release key and signing information should not committed
 *  to the git repository.
 *
 */
def keyStoreFile = rootProject.file('release-key.jks')
def keyPropsFile = rootProject.file('release-key.properties')

def keyProps = new Properties()
if (keyPropsFile.exists()) {
    keyPropsFile.withInputStream { stream ->
        keyProps.load(stream)
    }
}

def dateFormat = new SimpleDateFormat('yyyyMMddHHmm')
def developmentVersionSuffix = dateFormat.format(new Date())


android {
    compileSdkVersion 32
    defaultConfig {
        applicationId 'io.github.easyintent.quickref'
        minSdkVersion 16
        targetSdkVersion 32
        versionCode 8
        versionName '0.7.0'
        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'
    }

    signingConfigs {
        release {
            storeFile keyStoreFile
            storePassword keyProps['storePassword']
            keyAlias keyProps['keyAlias']
            keyPassword keyProps['keyPassword']
        }
    }

    buildTypes {
        debug {
            minifyEnabled false
            versionNameSuffix '-debug'
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

            // see signingConfig above
            signingConfig signingConfigs.release

            // comment below line when actually release new version
            versionNameSuffix "-git-$developmentVersionSuffix"
        }
    }

    packagingOptions {
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
    }

    testOptions {
        unitTests.includeAndroidResources = true
        unitTests.returnDefaultValues = true
        unitTests.all {
            testLogging {
                showStandardStreams = true
            }
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    buildFeatures {
        viewBinding true
    }
}

dependencies {

    implementation 'androidx.appcompat:appcompat:1.5.1'
    implementation 'androidx.fragment:fragment:1.5.5'
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'androidx.recyclerview:recyclerview:1.2.1'
    implementation 'androidx.lifecycle:lifecycle-viewmodel:2.5.1'
    implementation 'com.google.android.material:material:1.4.0'
    implementation 'org.slf4j:slf4j-api:1.7.36'
    releaseImplementation 'org.slf4j:slf4j-nop:1.7.36'
    debugImplementation 'uk.uuid.slf4j:slf4j-android:1.7.30-0'

    testImplementation 'junit:junit:4.13.2'

    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test:runner:1.5.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
    androidTestImplementation ('commons-io:commons-io:2.11.0') {  transitive = false  }
}
